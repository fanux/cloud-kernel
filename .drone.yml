kind: pipeline
name: default
workspace:
    base: /go
    path: src/github.com/fanux/cloud-kernel

# go mod vender
#environment:
#    GO111MODULE: on

# DRONE_TAG must is k8s tag, not include v
steps:
- name: createVM
  image: fanux/aliyun-cli
  environment:
    CONFIG:
      from_secret: aliyun-cli-config
  commands:
    - mkdir ~/.aliyun
    - echo $CONFIG | base64 --decode >> ~/.aliyun/config.json
    - aliyun ecs RunInstances --Amount 1 --ImageId centos_7_04_64_20G_alibase_201701015.vhd --InstanceType ecs.c5.xlarge --Action RunInstances --InternetChargeType PayByTraffic --InternetMaxBandwidthIn 5 --InternetMaxBandwidthOut 5 --Password Fanux#123 --InstanceChargeType PostPaid --SpotStrategy SpotAsPriceGo --RegionId cn-hongkong  --SecurityGroupId sg-j6cg7qx8vufo7vopqwiy --VSwitchId vsw-j6crutzktn5vdivgeb6tv --ZoneId cn-hongkong-b > InstanceId.json
    - ID=$(jq -r ".InstanceIdSets.InstanceIdSet[0]" < InstanceId.json)
    - sleep 60 # wait for IP
    - aliyun ecs DescribeInstanceAttribute --InstanceId $ID >> info.json
    - export FIP=$(jq -r ".PublicIpAddress.IpAddress[0]" < info.json)
    - IP=$(jq -r ".VpcAttributes.PrivateIpAddress.IpAddress[0]" < info.json)
    - cat info.json && echo $ID && echo $FIP && echo $IP
    - sshpass -p Fanux#123 ssh root@${FIP} 'cat "hello world" > hello'

      #- name: ssh-cmds
      #  image: appleboy/drone-ssh
      #    settings:
      #      host: foo.com
      #      username: root
      #      password:
      #        from_secret: ssh_password
      #      port: 22
      #      script:
      #        - echo hello
      #        - echo world
      #
      #- name: ssh-cmds-key
      #  image: appleboy/drone-ssh
      #  settings:
      #    host: foo.com
      #    username: root
      #    port: 22
      #    key:
      #      from_secret: ssh_key
      #    script:
      #      - echo hello
      #      - echo world
      #

      #- name: build
      #  image: golang:1.11.3
      #  commands:
      #    - wget https://dl.k8s.io/v${DRONE_TAG}/kubernetes-server-linux-amd64.tar.gz
      #    - wget https://sealyun.oss-cn-beijing.aliyuncs.com/free/cloud-kernel-addon.tar.gz
      #    - wget https://github.com/fanux/kube/releases/download/v${DRONE_TAG}-lvscare/kubeadm
      #    - tar zxvf kubernetes-server-linux-amd64.tar.gz
      #    - tar zxvf cloud-kernel-addon.tar.gz
      #    - cp cloud-kernel-addon.tar kube/images/
      #    - chmod +x kubeadm
      #    - cp kubeadm kube/bin/
      #    - cd kube
      #    - cp ../kubernetes/server/bin/kubectl bin/
      #    - cp ../kubernetes/server/bin/kubelet bin/
      #    - cp ../kubernetes/server/bin/kube-apiserver.tar images/
      #    - cp ../kubernetes/server/bin/kube-controller-manager.tar images/
      #    - cp ../kubernetes/server/bin/kube-scheduler.tar images/
      #    - cp ../kubernetes/server/bin/kube-proxy.tar images/
      #    - sed  "s/k8s_version/${DRONE_TAG}/g" -i conf/kubeadm.yaml
      #    - cd .. && tar zcvf kube${DRONE_TAG}.tar.gz kube
      #
      #  when:
      #     event:
      #     - tag
      #
      #- name: publish
      #  image: plugins/github-release
      #  settings:
      #    api_key:
      #        from_secret: git-release-token
      #    files: kube${DRONE_TAG}.tar.gz
      #    title: ${DRONE_TAG}
      #    note: Note.md
      #  when:
      #     event:
      #     - tag
